datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  classes    Class[]     @relation("ClassUsers")
  classUsers ClassUser[]

  @@map("users")
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
  @@map("verification_tokens")
}

model Class {
  id          Int      @id @default(autoincrement())
  className   String
  subject     String
  description String
  ownerId     String
  classCode   String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  users     User[]      @relation("ClassUsers")
  ClassUser ClassUser[]

  @@map("class")
  @@index([id])
}

model ClassUser {
  id      Int    @id @default(autoincrement())
  userId  String
  classId Int
  role    String

  user  User  @relation(fields: [userId], references: [id])
  class Class @relation(fields: [classId], references: [id])

  createdAt DateTime @default(now())

  @@unique([userId, classId]) 
}
